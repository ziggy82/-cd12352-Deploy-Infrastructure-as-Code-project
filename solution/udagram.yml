Parameters:
  ExerciseName:
    Type: String
    Description: Tag name for our resources

  AsgDesiredCapacity:
    Type: String
    Description: Desired capacity for the fleet of instances
    Default: 1

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Ref ExerciseName
      VpcId:
        Fn::ImportValue: !Sub "${ExerciseName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        UserData:
          Fn::Base64: |
            #!/bin/bash
            apt-get update -y
            sudo apt-get install nginx -y
            service nginx start
            # Define the directory where the index.html will be placed
            WEB_DIR="/var/www/html"

            # Create a basic index.html file
            cat <<EOF > index.html
            <!DOCTYPE html>
            <html>
            <head>
              <title>It works! Udagram, Udacity</title>
            </head>
            <body>
              <h1>It works! Udagram, Udacity</h1>
              <p>This website is hosted on Nginx.</p>
            </body>
            </html>
            EOF

            # Copy index.html to the Nginx web directory
            sudo rm -rf $WEB_DIR/index.html
            sudo cp index.html $WEB_DIR

            # Reload Nginx to apply changes
            sudo systemctl reload nginx
            
        ImageId: ami-03e9149278a6f457c
        SecurityGroupIds:
          - !Ref SecurityGroup
        InstanceType: t2.micro
        BlockDeviceMappings:
          - DeviceName: "/dev/sdk"
            Ebs:
              VolumeSize: "10"
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub "${ExerciseName}-PRIV-NETS"
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MinSize: "1"
      DesiredCapacity: !Ref AsgDesiredCapacity
      MaxSize: "6"
      TargetGroupARNs:
        - Ref: TargetGroup

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http access to our load balancer
      VpcId:
        Fn::ImportValue: !Sub "${ExerciseName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${ExerciseName}-PUB1-SN"
        - Fn::ImportValue: !Sub "${ExerciseName}-PUB2-SN"
      SecurityGroups:
        - Ref: LoadBalancerSecurityGroup

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: TargetGroup
      LoadBalancerArn:
        Ref: LoadBalancer
      Port: "80"
      Protocol: HTTP
  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref "TargetGroup"
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref "Listener"
      Priority: 1

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue: !Sub "${ExerciseName}-VPCID"
